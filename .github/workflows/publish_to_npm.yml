name: Publish to npm

on:
  push:
    tags:
      # patterns to match for tag creation. Here all tags similar to v1.0 or
      # v1.2.0 will trigger this action
      - 'v[0-9]+.[0-9]+.[0-9]+*'

jobs:
  publish_to_npm:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          fetch-depth: 20
          fetch-tags: false

      - id: release_type
        name: Identify release type 🔍
        run: echo "is_latest=$LATEST" >> $GITHUB_OUTPUT
        env:
          # Check on current tag name to decide whether to publish to `latest`/`next` npm tag
          LATEST: ${{ contains(github.ref, '-next') != true && contains(github.ref, '-rc') != true }}

      - id: cache-yarn
        name: Restore cached node modules ♻️
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            node_modules
            examples/example-app-monorepo/node_modules
            examples/example-app-v17/node_modules
            examples/example-app-v18/node_modules
            examples/example-app-v19/node_modules
            examples/example-app-yarn-workspace/node_modules
          key: ${{ inputs.os }}-${{ inputs.node }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ inputs.os }}-${{ inputs.node }}-build

      - name: Setup Node version ⚙️
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Install 🔧
        if: ${{ steps.cache-yarn.outputs.cache-hit != 'true' }}
        run: |
          yarn --immutable

      - name: Build 🔨
        run: yarn build

      - name: Publish with latest tag 🚀
        if: ${{ needs.setup_variables.outputs.is_latest == 'true' }}
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: Publish with next tag 🚀
        if: ${{ needs.setup_variables.outputs.is_latest != 'true' }}
        run: npm publish --access public --tag next
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
